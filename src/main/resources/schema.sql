DROP TABLE IF EXISTS rating CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS film_genres CASCADE;
DROP TABLE IF EXISTS film_likes CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS friendship_status CASCADE;
DROP TABLE IF EXISTS user_friends CASCADE;
DROP TABLE IF EXISTS users CASCADE;

CREATE TABLE IF NOT EXISTS rating
(
    id   LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS genres
(
    id   LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(30) NOT NULL
);

CREATE TABLE IF NOT EXISTS films
(
    id           LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(255) NOT NULL,
    description  VARCHAR(255) NOT NULL,
    release_date DATE         NOT NULL,
    duration     INTEGER      NOT NULL,
    rating_id    LONG REFERENCES rating (id) ON DELETE CASCADE,
    CONSTRAINT CHK_description CHECK (length(description) BETWEEN 1 AND 200),
    CONSTRAINT CHK_release_date CHECK (release_date BETWEEN '1895-12-28' AND CURRENT_DATE),
    CONSTRAINT CHK_duration CHECK (duration > 0)

);

CREATE TABLE IF NOT EXISTS film_genres
(
    film_id  LONG REFERENCES films (id) ON DELETE CASCADE,
    genre_id LONG REFERENCES genres (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS users
(
    id       LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR(255) UNIQUE NOT NULL,
    login    VARCHAR(255)        NOT NULL,
    name     VARCHAR(255)        NOT NULL,
    birthday DATE                NOT NULL,
    CONSTRAINT CHK_email CHECK (email LIKE '%_@__%.__%'),
    CONSTRAINT CHK_birthday CHECK (birthday < CURRENT_DATE)
);

CREATE TABLE IF NOT EXISTS user_friends
(
    user_id           LONG REFERENCES users (id) ON DELETE CASCADE,
    friend_id         LONG REFERENCES users (id) ON DELETE CASCADE,
    friendship_status VARCHAR(30),
    unique (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS film_likes
(
    film_id LONG REFERENCES films (id) ON DELETE CASCADE,
    user_id LONG REFERENCES users (id) ON DELETE CASCADE
);



